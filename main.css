*, *::after, *::before {
    box-sizing: border-box;
}

body {
    overflow-x: hidden;
    overflow-y: hidden;
    margin: 0;
    padding: 0;
    background: transparent;

    --card-count: 4;
    --card-gutter: 1vw;
    --card-width: 22vw;
    --card-border: 1vw;
    --flip-card-speed: 0.8s;
}

body::before {
    z-index: -1;
    content: '';
    opacity: 0.4;
    position: fixed; top: 0; right: 0; bottom: 0; left: 0;
    pointer-events: none;
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center center;
    background-image: repeating-linear-gradient(25deg, green, blue, yellow, white, red, indigo, black);
}

body::after {
    z-index: -2;
    content: '';
    opacity: 0.4;
    position: fixed; top: 0; right: 0; bottom: 0; left: 0;
    pointer-events: none;
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center center;
    background-image: repeating-linear-gradient(95deg, green, blue, yellow, white, red, indigo, black);
}

@media only screen and (min-width: 700px) {
    body {
        --card-count: 6;
        --card-gutter: 5px;
        --card-border: 3px;
        --card-width: 14vw;
    }
}

@media only screen and (min-width: 970px) {
    body {
        --card-count: 6;
        --card-gutter: 5px;
        --card-border: 5px;
        --card-width: 150px;
    }
}

.cards {
    background-color: transparent;
    box-sizing: content-box;
    display: flex;
    flex-flow: row wrap;
    margin: 0 auto;
    min-height: var(--card-width);
    padding: var(--card-gutter);
    width: calc( ( var(--card-width) + ( 2 * var(--card-gutter) ) ) * var(--card-count) );
}

.card {
    display: block;
    width: var(--card-width); 
    height: var(--card-width);
    position: relative;
    margin: var(--card-gutter);
}

.card > .front,
.card > .back {
    display: block;
    backface-visibility: hidden;
    border: var(--card-border) solid white;
    box-shadow: 0 0 3px rgba(0,0,0,0.24);
    position: absolute; top: 0; right: 0; bottom: 0; left: 0;
}

.card > .front {
    background-color: gray;
    background-position-x: center;
    background-position-y: center;
    background-repeat: no-repeat;
    background-size: cover;
    transform: rotateY(180deg);
    background-position: center center;
    will-change: rotate, rotateY, scale;
}

.card > .back {
    background: deepskyblue;
    will-change: rotate, rotateY, scale;
}

.card > .back::before {
    position: absolute; top: 0; right: 0; bottom: 0; left: 0;
    content: '';
    opacity: 0.20;
    background-image: repeating-linear-gradient(25deg, green, blue, yellow, white, red, indigo, black);
}

.card > .back::after {
    position: absolute; top: 0; right: 0; bottom: 0; left: 0;
    content: '';
    opacity: 0.25;
    background-image: repeating-linear-gradient(105deg, green, blue, yellow, white, red, indigo, black);
}

.card.concealed > .front {
    animation-name: flip-conceal-front;
    animation-duration: 0.8s;
    animation-fill-mode: forwards;
}

.card.concealed > .back {
    animation-name: flip-conceal-back;
    animation-duration: 0.8s;
    animation-fill-mode: forwards;
}

.card.remove > .front,
.card.revealed > .front {
    animation-name: flip-reveal-front;
    animation-duration: 0.8s;
    animation-fill-mode: forwards;
}

.card.remove > .back,
.card.revealed > .back {
    animation-name: flip-reveal-back;
    animation-duration: 0.8s;
    animation-fill-mode: forwards;
}

.card.remove {
    animation-name: remove-anim;
    animation-duration: 0.8s;
    animation-fill-mode: forwards;
    pointer-events: none;
}

.card.remove > .front,
.card.remove > .back {
    will-change: auto; /* once the card is removed, reset will-change optimization */
}

@keyframes remove-anim {
    100% { transform: rotate(1080deg) scale(0.2); opacity: 0; }
}

@keyframes flip-shadow {
    0%   { transform: rotateY(0deg)    scale(1); }
    15%  { transform: rotateY(0deg)    scale(0.8); }
    65%  { transform: rotateY(180deg)  scale(0.8); }
    100% { transform: rotateY(180deg)  scale(1); }
}

@keyframes flip-reveal-front {
    0%   { transform: rotateY(180deg)  scale(1);   z-index: 1000; }
    15%  { transform: rotateY(180deg)  scale(1.4); z-index: 1000; }
    65%  { transform: rotateY(0deg)    scale(1.4); z-index: 1000; }
    100% { transform: rotateY(0deg)    scale(1);   z-index: auto; }
}

@keyframes flip-reveal-back {
    0%   { transform: rotateY(0deg)    scale(1); z-index: 1000; }
    15%  { transform: rotateY(0deg)    scale(1.4); z-index: 1000; }
    65%  { transform: rotateY(-180deg) scale(1.4); z-index: 1000; }
    100% { transform: rotateY(-180deg) scale(1); z-index: auto; }
}

@keyframes flip-conceal-front {
    0%   { transform: rotateY(0deg)    scale(1); z-index: 1000; }
    15%  { transform: rotateY(0deg)    scale(1.4); z-index: 1000; }
    65%  { transform: rotateY(180deg)  scale(1.4); z-index: 1000; }
    100% { transform: rotateY(180deg)  scale(1); z-index: auto; }
}

@keyframes flip-conceal-back {
    0%   { transform: rotateY(-180deg) scale(1); z-index: 1000; }
    15%  { transform: rotateY(-180deg) scale(1.4); z-index: 1000; }
    65%  { transform: rotateY(0deg)    scale(1.4); z-index: 1000; }
    100% { transform: rotateY(0deg)    scale(1); z-index: auto; }
}

/* //////////////////////////// */

.counter {
    position: fixed; right: 0; bottom: 0; left: 0;
    background-color: black;
    color: white;
    display: flex;
    flex-flow: row nowrap;
    opacity: 0.7;
    font-size: 32px;
    line-height: 40px;
    font-family: fantasy;
}

@media only screen and (min-width: 700px) {
    line-height: 90px;
}

.counter > div {
    flex: 1 0 auto;
    text-align: center;
}

.counter > div + div {
    border-left: 1px dotted rgba(255,255,255,0.64) 
}

.counter.finished {
    animation-name: counter-anim;
    animation-duration: 1s;
    animation-fill-mode: forwards;
}

.counter .timer-count.finished {
}

.counter .turn-count.finished {
}

@keyframes counter-anim {
    50% {
        line-height: 100vh;
        opacity: 0.4;
    }
    99% {
        bottom: calc(100vh + 40px);
        line-height: 40px;
        opacity: 0.1;
    }
    100% {
        bottom: calc(100vh + 40px);
        line-height: 40px;
        background: transparent;
        opacity: 1;
        display: block;
    }
}

.final-points-count,
.final-turn-count,
.final-timer-count {
    position: fixed; top: -50px; right: 0; left: 0;
    display: block;
    text-align: center;
    color: white;
    font-family: sans-serif;
    font-size: 40px;
    text-shadow: 1px 1px 3px rgba(0,0,0,0.56);
}

.final-turn-count.finished {
    transform: translateY(100px);
    transition: 1s;
}

.final-timer-count.finished {
    transform: translateY(200px);
    transition: 1s;
}

.final-points-count.finished {
    transform: translateY(300px);
    transition: 1s;
}
